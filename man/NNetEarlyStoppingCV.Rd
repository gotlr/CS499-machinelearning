% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NNetEarlyStoppingCV.R
\name{NNetEarlyStoppingCV}
\alias{NNetEarlyStoppingCV}
\title{a function using nerual network through cross validation}
\usage{
NNetEarlyStoppingCV(X.mat, y.vec, fold.vec, max.iterations, step.size,
  n.hidden.units, n.folds = 4)
}
\arguments{
\item{X.mat}{: n x p}

\item{y.vec}{: vector n x 1}

\item{fold.vec}{: number of validation/training sets
fold.vec = samole(1:n.folds,length(y.vec))}
}
\value{
mean.validation.loss

mean.train.loss.vec

selected.steps
}
\description{
use K-fold cross validation based on the folds IDs provided in fold.vec(randomly)
}
\details{
for each validarion/train split, use NNetIterations to compute the predictions
for all observations

compute mean.validation.loss.vec, which is a vector(with max.iterations elements)
of mean validation loss over all K folds

comput mean.train.loss.vec, analogous to above but for the train data

minimize the mean validation loss to determine selected.steps,
the optimal number of steps/iterations

finally use NNetIteration(max.iterations=selected.steps) on the whole training data set
}
